#pragma rtGlobals=3		// Use modern global access method and strict wave access.
#pragma version = 1.0

//	2020 Hyungu Kang, www.hazykinetics.com, hyunguboy@gmail.com
//
//	GNU GPLv3. Please feel free to modify the code as necessary for your needs.
//
//	Version 1.0 (Released 2020-10-03)
//	1.	Initial release tested with Igor Pro 8.04.

////////////////////////////////////////////////////////////////////////////////

//	'HKang_LinRegCOnfIntervals' takes 2 waves of the same length and displays
//	them in a scatter plot. It uses Igor Pro's built-in 'StatsLinearRegression'
//	to calculate the confidence and prediction intervals (CI and PI).

////////////////////////////////////////////////////////////////////////////////

//	w_concY: Wave on the Y-axis.
//	w_concX: Wave on the X-axis.
//	v_ALPH: Significance level for the confidence intervals. Ex) 0.01 or 0.05.
Function HKang_LinRegCOnfIntervals(w_concY, w_concX, v_ALPH)
	Wave w_concY, w_concX
	Variable v_ALPH

	String str_concY, str_concX
	String str_concYCH, str_concYCL
	String str_concYPH, str_concYPL

	str_concY = nameofwave(w_concY)
	str_concX = nameofwave(w_concX)
	str_concYCH = str_concY + "_CH"	// High CI
	str_concYCL = str_concY + "_CL"	// Low CI
	str_concYPH = str_concY + "_PH"	// High PI
	str_concYPL = str_concY + "_PL"	// Low PI

	// If CI and PI waves still exist in the data folder, they need to be
	// deleted. Function will abort if those waves are in use and cannot be
	//	deleted within the function.
	If(waveexists($str_concYCH))
		KillWaves/Z $str_concYCH, $str_concYCL
		KillWaves/Z $str_concYPH, $str_concYPL
	EndIf

	If(waveexists($str_concYCH))
		DoAlert/T="Aborting" 0, "Aborting: " + str_concYCH + " still exists. Delete CI and PI waves."
		Abort "Aborting: " + str_concYCH + " still exists. Delete CI and PI waves."
	EndIf

	// Get CI and PI waves.
	StatsLinearRegression/ALPH=(v_ALPH)/T=1/PAIR/BCIW/BPIW w_concX, w_concY

	// Rename CI and PI names generated by 'StatsLinearRegression'.
	Duplicate/O $str_concYCH, w_CH
	Duplicate/O $str_concYCL, w_CL
	Duplicate/O $str_concYPH, w_PH
	Duplicate/O $str_concYPL, w_PL

	// Kill waves to prevent cluttering.
	KillWaves/Z $str_concYCH, $str_concYCL
	KillWaves/Z $str_concYPH, $str_concYPL

	// Display scatterplot and linear fit.
	Display/K=1 w_concY vs w_concX
	AppendToGraph w_CH, w_CL, w_PH, w_PL; DelayUpdate
	CurveFit/M=2/W=0/TBOX=(0x300) line, $str_concY/X=$str_concX/D; DelayUpdate

	ModifyGraph msize($str_concY)=4; DelayUpdate
	ModifyGraph mrkThick($str_concY)=2; DelayUpdate
	ModifyGraph rgb($str_concY)=(0,0,0); DelayUpdate
	ModifyGraph mode($str_concY)=3; DelayUpdate
	ModifyGraph lstyle(w_CH)=2,lstyle(w_CL)=2; DelayUpdate
	ModifyGraph lstyle(w_PH)=7,lstyle(w_PL)=7; DelayUpdate
	ModifyGraph lsize(w_CH)=2,lsize(w_CL)=2; DelayUpdate
	ModifyGraph lsize(w_PH)=2,lsize(w_PL)=2; DelayUpdate
	ModifyGraph rgb(w_CH)=(36873,14755,58982); DelayUpdate
	ModifyGraph rgb(w_CL)=(36873,14755,58982); DelayUpdate
	ModifyGraph rgb(w_PH)=(36873,14755,58982); DelayUpdate
	ModifyGraph rgb(w_PL)=(36873,14755,58982); DelayUpdate
	ModifyGraph lsize($"fit_"+str_concY)=2; DelayUpdate
	ModifyGraph rgb($"fit_"+str_concY)=(0,0,0); DelayUpdate

	Label left, str_concY; DelayUpdate
	Label bottom, str_concX; DelayUpdate

End